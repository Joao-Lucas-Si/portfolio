---
interface Props {
    svg: string|string[];
    cor: "laranja" | "amarelo" | "azul" | "vermelho"|"verde";
    nome: string;
    position: string;
    isSecundary?: boolean
    viewBox?: string
}

const { cor, nome, svg, position, viewBox = "0 0 384 512", isSecundary } = Astro.props;
---

<svg
    class={`${position} absolute ${cor == "vermelho" ? "stroke-red-500 drop-shadow-[0_0_10px_red]" : cor =="verde" ? "stroke-green-500 drop-shadow-[0_0_10px_green]" : cor == "laranja" ? "stroke-orange-500 drop-shadow-[0_0_10px_orange]" : cor == "azul" ? "stroke-blue-500 drop-shadow-[0_0_10px_blue]" : "stroke-yellow-500 drop-shadow-[0_0_10px_yellow]"}  stroke-[10] ${isSecundary ? "w-[4rem] h-[4rem] lg:block hidden" : "w-[8rem] h-[8rem]" } fill-transparent`}
    xmlns="http://www.w3.org/2000/svg"
    viewBox={viewBox}
>
    {svg instanceof Array ? svg.map(d => <path d={d}></path>) :<path d={svg}></path> } 
</svg>

<style>
    @keyframes desenhar {
        from {
            stroke-dashoffset: 2600;
        }
        to {
            stroke-dashoffset: 0;
        }
    }

    svg {
        stroke-dasharray: 2600;
        animation: desenhar 5s backwards;
    }
</style>
