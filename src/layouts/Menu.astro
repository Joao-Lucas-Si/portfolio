---
import Image from "astro/components/Image.astro";
import NekoArk from "../assets/images/neko-ark.png"

const paginaAtual = Astro.originPathname
---

<div class="border-y-2 bg-gray-900 border-y-purple-500 flex justify-between z-10 md:p-4 p-2 sticky top-[-0.2rem]">
    <div class="flex items-center gap-2 justify-center">

        <Image class="w-12 h-12 drop-shadow-[0_0_15px_purple]" alt="neko-ark " src={NekoArk} />
        <h2 class="palavras-chaves md:block text-2xl hidden font-bold drop-shadow-[0_0_15px_purple] text-purple-500"><span class="indicador">|</span></h2>
    </div>
    <ul class="flex gap-2 items-center justify-center ">
        {[...(paginaAtual == "/") ? [
           //{ texto: "Sobre Mim", link: "#sobre-mim" },
            { texto: "Conhecimentos", link: "#conhecimentos" }, { texto: "Projetos", link:"#projetos" }] : [{ texto: "Home", link: "/" }]].map(link => <li class="text-gray-400 active:text-purple-300 hover:text-purple-500">
            <a href={link.link}>{link.texto}</a>
        </li>)}
        
    </ul>
</div>

<style>
    @keyframes aparecer {
        from {
            opacity: 0;

        }
        to {
            opacity: 1;
        }
    }

    .indicador {
        animation: 1s aparecer infinite alternate;
    }
    </style>

<script>
    const palavrasChaves  =["programação","mobile","desenvolvimento", "frontend", "backend", "fullstack", "banco de dados" ,"web", "padrões de projetos"]
    let palavraAtual = 0
    const indicador = document.querySelector(".indicador")!
    const container = document.querySelector(".palavras-chaves")!

    const tempoPorPalavra = 250
    function digitar() {
        container.innerHTML = ""
        container.appendChild(indicador)
        const palavra=palavrasChaves[palavraAtual]
        for (let i =0; i < palavra.length; i++) {
            setTimeout(() => {
                container.innerHTML = ""
                container.append(palavra.slice(0, i+1), indicador)
            }, i * tempoPorPalavra)
        }
       

    }

    function acionarTimer() {
        setTimeout(() => {
            digitar()
            acionarTimer()
        
            if (palavraAtual == palavrasChaves.length - 1) palavraAtual =0
                else palavraAtual ++
        }, palavrasChaves[palavraAtual].length * tempoPorPalavra + tempoPorPalavra * 2)
    }
    digitar()
    palavraAtual++ 
    acionarTimer()
    
</script>